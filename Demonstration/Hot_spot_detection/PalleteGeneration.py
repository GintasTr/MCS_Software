from SimpleCV import *
import numpy as np
import cv2
import time

class Pallete_generation:

    def __init__(self):
        self.PALLETE_FILE_NAME = "Pallete.png"

    def get_colormap(self):
        # COLORMAP FROM: http://jdherman.github.io/colormap/

        colormap = [[0,0,145],
        [4,0,145],
        [8,0,145],
        [12,0,145],
        [16,0,145],
        [20,0,145],
        [24,0,145],
        [28,0,145],
        [32,0,145],
        [36,0,146],
        [40,0,146],
        [44,0,146],
        [48,0,146],
        [52,0,146],
        [56,0,146],
        [60,0,146],
        [64,0,146],
        [68,0,147],
        [72,0,147],
        [76,0,147],
        [80,0,147],
        [84,0,147],
        [88,0,147],
        [92,0,147],
        [96,0,147],
        [100,0,148],
        [104,0,148],
        [108,0,148],
        [112,0,148],
        [116,0,148],
        [120,0,148],
        [124,0,148],
        [128,0,148],
        [132,0,149],
        [136,0,149],
        [140,0,149],
        [144,0,149],
        [148,0,149],
        [152,0,149],
        [156,0,149],
        [160,0,149],
        [164,0,149],
        [169,0,150],
        [173,0,150],
        [177,0,150],
        [181,0,150],
        [185,0,150],
        [189,0,150],
        [193,0,150],
        [197,0,150],
        [201,0,151],
        [205,0,151],
        [209,0,151],
        [213,0,151],
        [217,0,151],
        [221,0,151],
        [225,0,151],
        [229,0,151],
        [233,0,152],
        [237,0,152],
        [241,0,152],
        [245,0,152],
        [249,0,152],
        [253,0,152],
        [255,0,152],
        [255,0,149],
        [255,0,147],
        [255,0,144],
        [255,0,142],
        [255,0,140],
        [255,0,137],
        [255,0,135],
        [255,0,133],
        [255,0,130],
        [255,0,128],
        [255,0,125],
        [255,0,123],
        [255,0,121],
        [255,0,118],
        [255,0,116],
        [255,0,113],
        [255,0,111],
        [255,0,109],
        [255,0,106],
        [255,0,104],
        [255,0,101],
        [255,0,99],
        [255,0,97],
        [255,0,94],
        [255,0,92],
        [255,0,90],
        [255,0,87],
        [255,0,85],
        [255,0,82],
        [255,0,80],
        [255,0,78],
        [255,0,75],
        [255,0,73],
        [255,0,70],
        [255,0,68],
        [255,0,66],
        [255,0,63],
        [255,0,61],
        [255,0,59],
        [255,0,56],
        [255,0,54],
        [255,0,51],
        [255,0,49],
        [255,0,47],
        [255,0,44],
        [255,0,42],
        [255,0,39],
        [255,0,37],
        [255,0,35],
        [255,0,32],
        [255,0,30],
        [255,0,27],
        [255,0,25],
        [255,0,23],
        [255,0,20],
        [255,0,18],
        [255,0,16],
        [255,0,13],
        [255,0,11],
        [255,0,8],
        [255,0,6],
        [255,0,4],
        [255,0,1],
        [255,2,0],
        [255,5,0],
        [255,9,0],
        [255,12,0],
        [255,16,0],
        [255,19,0],
        [255,23,0],
        [255,26,0],
        [255,30,0],
        [255,33,0],
        [255,37,0],
        [255,40,0],
        [255,43,0],
        [255,47,0],
        [255,50,0],
        [255,54,0],
        [255,57,0],
        [255,61,0],
        [255,64,0],
        [255,68,0],
        [255,71,0],
        [255,75,0],
        [255,78,0],
        [255,82,0],
        [255,85,0],
        [255,89,0],
        [255,92,0],
        [255,96,0],
        [255,99,0],
        [255,103,0],
        [255,106,0],
        [255,110,0],
        [255,113,0],
        [255,117,0],
        [255,120,0],
        [255,123,0],
        [255,127,0],
        [255,130,0],
        [255,134,0],
        [255,137,0],
        [255,141,0],
        [255,144,0],
        [255,148,0],
        [255,151,0],
        [255,155,0],
        [255,158,0],
        [255,162,0],
        [255,165,0],
        [255,169,0],
        [255,172,0],
        [255,176,0],
        [255,179,0],
        [255,183,0],
        [255,186,0],
        [255,190,0],
        [255,193,0],
        [255,197,0],
        [255,200,0],
        [255,204,0],
        [255,207,0],
        [255,210,0],
        [255,214,0],
        [255,217,0],
        [255,221,0],
        [255,222,3],
        [255,223,7],
        [255,223,11],
        [255,224,15],
        [255,224,19],
        [255,225,23],
        [255,225,27],
        [255,226,31],
        [255,226,35],
        [255,227,39],
        [255,227,43],
        [255,228,47],
        [255,228,51],
        [255,229,55],
        [255,229,59],
        [255,230,63],
        [255,231,67],
        [255,231,71],
        [255,232,75],
        [255,232,79],
        [255,233,83],
        [255,233,87],
        [255,234,91],
        [255,234,95],
        [255,235,99],
        [255,235,103],
        [255,236,107],
        [255,236,111],
        [255,237,115],
        [255,237,119],
        [255,238,123],
        [255,238,127],
        [255,239,131],
        [255,239,135],
        [255,240,139],
        [255,240,143],
        [255,241,147],
        [255,241,151],
        [255,242,155],
        [255,242,159],
        [255,243,163],
        [255,244,167],
        [255,244,171],
        [255,245,175],
        [255,245,179],
        [255,246,183],
        [255,246,187],
        [255,247,191],
        [255,247,195],
        [255,248,199],
        [255,248,203],
        [255,249,207],
        [255,249,211],
        [255,250,215],
        [255,250,219],
        [255,251,223],
        [255,251,227],
        [255,252,231],
        [255,252,235],
        [255,253,239],
        [255,253,243],
        [255,254,247],
        [255,254,251],
        [255,255,255]]

        return colormap

    def generate_pallete_image(self, width, height):
        palette = np.array(self.get_colormap(),np.uint8)
        number = range(0,256)
        image_list = [number]*width
        np_list = np.array(image_list,np.uint8)
        np_list = palette[np_list]
        image_correct = cv2.cvtColor(np_list, cv2.COLOR_BGR2RGB)
        image_correct = image_correct.transpose(1,0,2)
        image_correct = cv2.flip(image_correct,0)
        pallete_scaled = cv2.resize(image_correct, (width,height), None, 0, 0, cv2.INTER_NEAREST)
        # cv2.imshow("window", pallete_scaled)
        cv2.imwrite(self.PALLETE_FILE_NAME, pallete_scaled)

    def get_pallete_numpy_array(self):
        palette = np.array(self.get_colormap(),np.uint8)
        return palette


    def get_pallete_image(self, width, height):
        self.generate_pallete_image(width, height)
        img = Image(self.PALLETE_FILE_NAME)
        return img

# If called by itself:
if __name__ == '__main__':
    c = Pallete_generation()
    img = c.get_pallete_image(200,800)
    disp = Display()
    while disp.isNotDone():
        img.show()

    raw_input()




